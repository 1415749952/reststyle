<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.reststyle</groupId>
    <artifactId>reststyle</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0</version>

    <name>reststyle</name>
    <description>reststyle后台管理系统</description>


    <properties>
        <reststyle.version>1.0.0</reststyle.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>11</java.version>
        <!--<java.version>1.8</java.version>-->
        <druid.version>1.2.4</druid.version>
      <!--  <knife4j.version>2.0.8</knife4j.version>-->
        <pagehelper.boot.version>1.3.0</pagehelper.boot.version>
        <oshi.version>5.6.0</oshi.version>
       <!-- <jna.version>5.7.0</jna.version>-->
        <poi.version>4.1.2</poi.version>
        <velocity.version>1.7</velocity.version>
        <jwt.version>0.9.1</jwt.version>
        <mybatis-plus.version>3.4.2</mybatis-plus.version>
        <hutool.version>5.5.8</hutool.version>
        <feign.version>2.2.6.RELEASE</feign.version>
        <feign-okhttp.version>11.0</feign-okhttp.version>
        <oracle.version>11.2.0.3</oracle.version>
        <dynamic-datasource.version>3.3.2</dynamic-datasource.version>
        <maven-compiler.version>3.8.1</maven-compiler.version>
        <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
        <maven-dependency-plugin.version>3.2.0</maven-dependency-plugin.version>
        <maven-assembly.version>3.3.0</maven-assembly.version>
        <springfox-boot-starter.version>3.0.0</springfox-boot-starter.version>
    </properties>

    <!-- 依赖声明 -->
    <dependencyManagement>
        <dependencies>

            <!-- SpringBoot的依赖配置-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.2.13.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--阿里数据库连接池 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!-- oracle驱动包 -->
            <dependency>
                <groupId>com.oracle</groupId>
                <artifactId>ojdbc6</artifactId>
                <version>${oracle.version}</version>
            </dependency>
            <!-- pagehelper 分页插件 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.mybatis</groupId>
                        <artifactId>mybatis</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- 获取系统信息 -->
            <dependency>
                <groupId>com.github.oshi</groupId>
                <artifactId>oshi-core</artifactId>
                <version>${oshi.version}</version>
            </dependency>

         <!--   <dependency>
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna</artifactId>
                <version>${jna.version}</version>
            </dependency>

            <dependency>
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna-platform</artifactId>
                <version>${jna.version}</version>
            </dependency>-->

        <!--    <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>-->

            <!-- excel工具 -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>

            <!--velocity代码生成使用模板 -->
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity</artifactId>
                <version>${velocity.version}</version>
            </dependency>

            <!--Token生成与解析-->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jwt.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-extension</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
                <version>${dynamic-datasource.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-openfeign</artifactId>
                <version>${feign.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-okhttp</artifactId>
                <version>${feign-okhttp.version}</version>
            </dependency>

            <!-- 定时任务-->
             <dependency>
                 <groupId>com.reststyle</groupId>
                 <artifactId>reststyle-quartz</artifactId>
                 <version>${reststyle.version}</version>
             </dependency>
            <!-- 代码生成-->
             <dependency>
                 <groupId>com.reststyle</groupId>
                 <artifactId>reststyle-generator</artifactId>
                 <version>${reststyle.version}</version>
             </dependency>


            <dependency>
                <groupId>com.reststyle</groupId>
                <artifactId>reststyle-service</artifactId>
                <version>${reststyle.version}</version>
            </dependency>

            <!-- 通用工具-->
            <dependency>
                <groupId>com.reststyle</groupId>
                <artifactId>reststyle-common</artifactId>
                <version>${reststyle.version}</version>
            </dependency>


            <dependency>
                <groupId>com.reststyle</groupId>
                <artifactId>reststyle-domain</artifactId>
                <version>${reststyle.version}</version>
            </dependency>

            <dependency>
                <groupId>com.reststyle</groupId>
                <artifactId>reststyle-dao</artifactId>
                <version>${reststyle.version}</version>
            </dependency>


            <dependency>
                <groupId>com.reststyle</groupId>
                <artifactId>reststyle-framework-web</artifactId>
                <version>${reststyle.version}</version>
            </dependency>
            <dependency>
                <groupId>com.reststyle</groupId>
                <artifactId>reststyle-framework-service</artifactId>
                <version>${reststyle.version}</version>
            </dependency>
            <dependency>
                <groupId>com.reststyle</groupId>
                <artifactId>reststyle-framework-dao</artifactId>
                <version>${reststyle.version}</version>
            </dependency>
            <dependency>
                <groupId>com.reststyle</groupId>
                <artifactId>reststyle-framework-domain</artifactId>
                <version>${reststyle.version}</version>
            </dependency>
            <dependency>
                <groupId>com.reststyle</groupId>
                <artifactId>reststyle-framework-common</artifactId>
                <version>${reststyle.version}</version>
            </dependency>

            <!-- demo模块 -->
            <!-- <dependency>
                 <groupId>com.ruoyi</groupId>
                 <artifactId>ruoyi-demo</artifactId>
                 <version>${ruoyi.version}</version>
             </dependency>-->

        </dependencies>
    </dependencyManagement>

    <modules>
        <module>reststyle-web</module>
        <module>reststyle-framework</module>
        <module>reststyle-common</module>
        <module>reststyle-service</module>
        <module>reststyle-domain</module>
        <module>reststyle-dao</module>
        <module>reststyle-quartz</module>
    </modules>


    <build>
        <plugins>
            <!-- java编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <!--字符集 -->
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>

            </plugin>

            <!-- 打jar包的插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <!--maven中的自动默认打包war包和jar的路径是项目中的target目录 ，现在我想将它的输出到我想输出的地方-->
                    <outputDirectory>${project.build.directory}/package/restStyle</outputDirectory>
                    <archive>
                        <!-- 生成的jar中，不要包含pom.xml和pom.properties这两个文件 -->
                        <addMavenDescriptor>true</addMavenDescriptor>
                        <manifest>
                            <!-- 是否要把第三方jar放到manifest的classpath中 -->
                            <addClasspath>true</addClasspath>
                            <!-- 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib -->
                            <classpathPrefix>lib</classpathPrefix>
                            <!-- 程序启动入口 -->
                            <mainClass>com/reststyle/RestStyleApplication</mainClass>
                        </manifest>
                        <!--将资源文件目录添加到classpath中，打包后运行项目时则会在该目录下加载配置文件-->
                        <manifestEntries>
                            <!--填写配置文件相对于项目jar包的路径-->
                            <Class-Path>./</Class-Path>
                        </manifestEntries>
                    </archive>
                    <!-- 过滤掉不希望包含在jar中的文件  -->
                    <excludes>
                        <!--设置不打进jar包的文件-->
                        <exclude>*.properties</exclude>
                        <exclude>*.xml</exclude>
                        <exclude>*.bat</exclude>
                        <exclude>*.yml</exclude>
                        <exclude>bin</exclude>
                        <exclude>bin/**/*</exclude>
                    </excludes>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/package/restStyle</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <includes>
                                        <!--<include>**/*/*.xml</include>-->
                                        <include>static/**</include>
                                        <include>**/*/*.conf</include>
                                        <include>**/*/*.properties</include>
                                        <include>**/*/*.sh</include>
                                        <include>**/*/*.bat</include>
                                        <include>*.yml</include>
                                        <include>*.xml</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <encoding>UTF-8</encoding>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/package/restStyle/lib</outputDirectory>
                            <excludeTransitive>false</excludeTransitive>
                            <stripVersion>false</stripVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

  <!--  <profiles>
        <profile>
            <id>dev</id>
            <properties>
                &lt;!&ndash; 环境标识，需要与配置文件的名称相对应 &ndash;&gt;
                <profiles.active>dev</profiles.active>
                <logging.level>debug</logging.level>
            </properties>
            <activation>
                &lt;!&ndash; 默认环境 &ndash;&gt;
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <profiles.active>prod</profiles.active>
                <logging.level>warn</logging.level>
            </properties>
        </profile>
    </profiles>-->

</project>