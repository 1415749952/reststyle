package ${packageName}.domain;

import com.baomidou.mybatisplus.annotation.*;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;
import lombok.EqualsAndHashCode;
import lombok.experimental.Accessors;
import java.io.Serializable;
import java.util.Date;
import java.math.BigDecimal;


/**
 * Created with IntelliJ IDEA.
 * Description: ${functionName}对象 ${tableName}
 *
 * @version 1.0
 * @author: TheFei
 * @Date: ${datetime}
 * @Time: 19:09
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@EqualsAndHashCode
@TableName("${tableName}")
public class ${ClassName} implements Serializable
{

    private static final long serialVersionUID=1L;

#foreach ($column in $columns)

    /**
     *  $column.columnComment
     */
#if($column.isPk==1)
    @TableId(value = "$column.columnName")
    private $column.javaType $column.javaField;
#else
    #if($column.javaField=="createBy"||$column.javaField=="createTime")
@TableField(value = "$column.columnName", fill = FieldFill.INSERT)
    private $column.javaType $column.javaField;
    #elseif(($column.javaField=="updateBy"||$column.javaField=="updateTime"))
@TableField(value = "$column.columnName", fill = FieldFill.INSERT_UPDATE)
    private $column.javaType $column.javaField;
    #elseif($column.javaField=='delFlag')
@TableLogic
    @TableField(value = "$column.columnName", fill = FieldFill.INSERT)
    private $column.javaType $column.javaField;
    #else
@TableField(value = "$column.columnName")
    private $column.javaType $column.javaField;
    #end
#end
#end

}
